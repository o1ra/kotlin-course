package org.example.org.kotlintest.lessons.lesson10.homework

fun main() {


//Задачи на работу со словарём.
//1. Создайте пустой неизменяемый словарь, где ключи и значения - целые числа.
    val map01 = mapOf<Int, Int>()

//2. Создайте словарь, инициализированный несколькими парами "ключ-значение", где ключи - float, а значения - double
    val map02 = mapOf(3.1f to 3.156, 1.9f to 20.23)

//3. Создайте изменяемый словарь, где ключи - целые числа, а значения - строки.
    val map03 = mutableMapOf<Int, String>()

//4. Имея изменяемый словарь, добавьте в него новые пары "ключ-значение".
    val map04 = mutableMapOf(1 to "One", 2 to "Two")
    map04[3] = "Three"
//5. Используя словарь из предыдущего задания, извлеките значение, используя ключ.
// Попробуй получить значение с ключом, которого в словаре нет.
    val valueForKey4 = map04[4]           // Вернет null, так как ключа 4 нет в словаре

//6. Удалите определенный элемент из изменяемого словаря по его ключу.
    map04.remove(1)


//7. Создайте словарь (ключи Double, значения Int) и выведи в цикле результат деления ключа на значение.
// Не забудь обработать деление на 0 (в этом случае выведи слово “бесконечность”)
    val map07 = mapOf(
        10.0 to 2,
        15.5 to 5,
        9.0 to 3
    )

    for ((key, value) in map07) {
        val result = if (value == 0) "бесконечность" else key / value
        println("$key / $value = $result")
    }

//8. Измените значение для существующего ключа в изменяемом словаре.
// Изменяем значение для ключа 2
    map04[2] = "Два"

// через метод put
    map04.put(3, "Три")

//9. Создайте два словаря и объедините их в третьем изменяемом словаре через циклы.
    val map05= mapOf(1 to "One", 2 to "Two")
    val map06 = mapOf(3 to "Three", 4 to "Four")

    val mergedMap = mutableMapOf<Int, String>()

    for ((key, value) in map05) {
        mergedMap[key] = value
    }

    for ((key, value) in map06) {
        mergedMap[key] = value
    }

    println(mergedMap)

//11. Создайте словарь, где ключами являются строки, а значениями - списки целых чисел.
// Добавьте несколько элементов в этот словарь.
    val myMap = mutableMapOf<String, List<Int>>()

    myMap["numbers"] = listOf(1, 2, 3)
    myMap["evens"] = listOf(2, 4, 6, 8)
    myMap["primes"] = listOf(2, 3, 5, 7)


//12. Создай словарь, в котором ключи - это целые числа, а значения - изменяемые множества строк.
    val dict = mutableMapOf<Int, MutableSet<String>>()
// Добавь данные в словарь.
    dict[1] = mutableSetOf("a", "b")
    dict[2] = mutableSetOf("x")
//    Получи значение по ключу (это должно быть множество строк)
    val set = dict[1]
//    и добавь в это множество ещё строку. Распечатай полученное множество.
    set?.add("newValue")
    println(set)

    dict[1] = mutableSetOf("a", "b")
    dict[2] = mutableSetOf("x")

//13. Создай словарь, где ключами будут пары чисел. Через перебор найди значение у которого пара
// будет содержать цифру 5 в качестве первого или второго значения.


//Задачи на подбор оптимального типа для словаря
//14. Словарь библиотека: Ключи - автор книги, значения - список книг


//15. Справочник растений: Ключи - типы растений (например, "Цветы", "Деревья"), значения - списки названий растений


//16. Четвертьфинала: Ключи - названия спортивных команд, значения - списки игроков каждой команды


//17. Курс лечения: Ключи - даты, значения - список препаратов принимаемых в дату


//18. Словарь путешественника: Ключи - страны, значения - словари из городов со списком интересных мест.


}