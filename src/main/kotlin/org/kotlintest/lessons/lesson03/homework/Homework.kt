package org.example.org.kotlintest.lessons.lesson03.homework

//1. Название мероприятия
val name: String = "Hackathon Survival"

//2. Дата проведения
var date: String = "14.09.2025"

//3. Место проведения
var place: String = "Kz"

//4. Подробный бюджет мероприятия, включая расходы на оборудование, кейтеринг и другие операционные расходы.
private val budget: String = ""

//5. Количество участников
var member: Int = 0

//6. Длительность хакатона
val duration: Int = 5

//7. Контактная информация и условия соглашений с поставщиками пищи, оборудования и других услуг.
private val contactInfo: String = ""

//8. Текущее состояние хакатона (статус)
var status: String = ""

//9. Список спонсоров
val SponsorList: String = ""

//10. Бюджет мероприятия
val cost: Int = 1_000_000

//11. Текущий уровень доступа к интернету
var internetConnection: String = ""

//12. Информация о транспортировке оборудования, распределении ресурсов и координации между различными командами поддержки.
private val logisticInfo: String = ""

//13.Количество команд
var command: Int = 0

//14. Перечень задач
val taskList: String = ""

//15. План эвакуации
val evacuationPlan: String = ""

//16. Список доступного оборудования (всё, что выделено для использования на мероприятии)
val equipmentList: String = ""

//17. Список свободного оборудования (всё, что можно взять прямо сейчас и что не занято другими участниками)
var equipmentFree: String = ""

//18. График питания участников (зависит от поставщика питания, определяемого за неделю до начала)
lateinit var mealSchedule: String

//19. План мероприятий на случай сбоев
val disasterPlan: String = ""

//20. Список экспертов и жюри
var expertList: String = ""

//21. Политика конфиденциальности
val privacypolicy: String = ""

//22. Приватные отзывы (фидбэк) участников и зрителей для анализа проблем.
private lateinit var feedback: String

//23. Текущая температура в помещении
var temp: Int = 25

//24. Данные мониторинга и анализ производительности сетевого
// оборудования и интернет-соединения для целей отладки своих приложений командами
var networkPerfomanceData: String = ""

//25. Регулятор скорости интернета (понижающий коэффициент, например 0.5)
val InternetSpeed: Float = 0.5f

//26. Уровень освещения
var lightingLevel: Int = 100

//27. Лог событий мероприятия
lateinit var logEvent: String

//28. Возможность получения медицинской помощи прямо на мероприятии (да/нет)
val medCare: Boolean = true

//29. Планы и процедуры для обеспечения безопасности мероприятия, включая планы эвакуации и протоколы чрезвычайных ситуаций.
val SavePlan: String = ""

//30. Регистрационный номер мероприятия
val eventRegistrationNumber: Int = 0

//31. Максимально допустимый уровень шума в помещении хакатона.
var maxNoiseLevel: Int = 10

//32. Индикатор превышения уровня шума в помещениях (превышен или не превышен в данный момент)
var noiseLevelIndicator: Boolean = false

//33. План взаимодействия с прессой
val pressPlan: String = ""

//34. Детальная публичная информация о проектах каждой команды, сбор данных включает
// в себя компиляцию кода и сбор статистики прогона автоматизированных проверок.
lateinit var projectInfo: String

//35. Статус получения всех необходимых разрешений для проведения мероприятия
var statusPermission: String = ""

//36. Индикатор доступности специализированного оборудования в данный момент (например, специальному оборудованию)
var equipmentAvailabilityIndicator: Boolean = true

//37. Список партнеров мероприятия
var partnersList: String = ""
    private set

//38. Отчет, включающий фотографии, видео и отзывы, генерируется и становится доступен после завершения мероприятия.
val report: String by lazy {""}

//39. Внутренние правила распределения призов
private val prizePules: String = ""

//40. Список разыгрываемых призов
val prizeList: String = ""

//41. Контактная информация экстренных служб, медицинского персонала и других
// важных служб, для внутреннего пользования.
private val emergencyContactInfo: String = ""

//42. Особые условия для участников с ограниченными возможностями
val specialContitions: String = ""

//43. Общее настроение участников (определяется опросами)
var moodMembers: String = ""

//44. Подробный план хакатона, включающий время и содержание каждого сегмента,
// инициализируется непосредственно перед началом мероприятия, так как зависит от
// фактического состава команд и взятых в работу задач.
lateinit var hackatonPlan: String

//45. Имя знаменитого специального гостя, которое будет объявлено за день до мероприятия, но в момент инициализации неизвестно.
lateinit var nameFamousGuest: String

//46. Максимальное количество людей, которое может вместить место проведения.
val maxMembers: Int = 500

//47. Количество часов, отведенное каждой команде для работы над проектом.
val hours: Int = 3;