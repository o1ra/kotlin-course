1.Задачи с простыми операторами
(14 - 4 <= 10) || (6 / 2 != 3)
true || false
true

(9 + 1 == 10) && (8 % 2 == 0)
true && false
false

(7 - 2 < 5) || (4 * 3 != 12)
false || false
false

(18 / 6 >= 3) && (5 + 5 == 10)
true && true
true

(11 % 3 != 2) || (9 - 3 == 6)
false || false
false

(5 * 2 < 11) && (14 / 2 == 7)
true && true
true

(8 + 2 <= 10) || (7 % 2 != 1)
true && false
false

(16 / 4 > 3) && (3 + 4 == 7)
true && true
true

(10 % 2 == 0) || (5 - 3 != 1)
true || true
true

2. Задачи с приоритетом операторов
7 - 2 * (2 + 3) / 5 + 3 * 2 = 11
  1. 2 + 3 = 5
  2. 2 * 5 = 10
  3. 10 / 5 = 2
  4. 3 * 2 = 6
  5. 7 - 2 + 6 = 11

7 - 2 * 2 + 3 / 3 + 5 * 2
  1. 2 * 2 = 4
  2. 3 / 3 = 1
  3. 5 * 2 = 10
  4. 7 - 4 + 1 + 10 = 14

((4 * 3) < 13) && !(8 / 4 == 2) || (10 % 3 != 1)
1. (12 < 13) && !(8 / 4 == 2) || (10 % 3 != 1)
2. (12 < 13) && !(2 == 2) || (10 % 3 != 1)
3. (12 < 13) && !(2 == 2) || (1 != 1)
4. true && !true || false
5. true && false || false
6. false || false
7. false

(((14 - 5) > 8) || (9 / 3 == 3)) && !(7 + 0 != 7)
1.((9 > 8) || (9 / 3 == 3)) && !(7 + 0 != 7)
2.((9 > 8) || (3 == 3)) && !(7 + 0 != 7)
3.((9 > 8) || (3 == 3)) && !(7 != 7)
4.(true || true) && !false
5. true && !false
6. true && true
7. true

((2 + 3) <= 5) && (16 / 4 == 4) || !(6 % 2 == 0)
1.(5 <= 5) && (16 / 4 == 4) || !(6 % 2 == 0)
2.(5 <= 5) && (4 == 4) || !(6 % 2 == 0)
3.(5 <= 5) && (4 == 4) || !(0 == 0)
4.true && true || !true
5.true || !true
6.true || false
7.true

3. Задачи с инкрементом и декрементом
(var f = 6; --f >= 5) || ((3 * 2 == 6) && (9 - 4 != 5))
true || true && false
true ||false
true

(var g = 0; g++ != 0) && !((4 + 2 == 6) || (5 / 1 == 5))
false && !(true || true)
false && !true
false && false
false

!(var h = 7; h-- > 6) || (8 + 1 == 9) && (3 % 2 != 1)
!true || true && false
false || true && false
false || false
false

((var i = 5; i++ == 5) || (2 * 2 != 4)) && (10 / 2 == 5)
(true || false) && true
true && true
true

(var j = 4; j-- < 4) && (6 + 0 == 6) || !(5 % 2 != 1)
false && true || !false
false || true
true


Задача 1

Контекст: Вы изучаете физическое явление затухания звука в помещении.
 У вас есть измеренное значение начальной интенсивности звука, но из-за
  ограничений оборудования данные о коэффициенте затухания иногда могут быть неизвестны.
Задача: Рассчитать предполагаемую интенсивность звука после затухания.
Интенсивность звука после затухания пропорциональна начальной интенсивности,
умноженной на коэффициент затухания. Если коэффициент затухания неизвестен,
использовать стандартное значение 0.5.

fun main() {

   // example 1
   val baseIntensity: Double = 3.0
   val coefficient: Double? = 0.73 // но может быть null
   val baseCoefficient = 0.5

   val resultIntensity = baseIntensity * (coefficient ?: baseCoefficient)


Задача 2

Контекст: Клиент оплачивает доставку груза. К стоимости доставки добавляется страховка на груз, которая составляет 0,5% от его стоимости. В случае, если стоимость не указана, то берётся стандартная стоимость в $50
Задача: Рассчитать полную стоимость доставки.

// example 2
   val defaultCost: Double = 50.0
   val cost: Double? = 20.0 // но может быть null
   val deliveryCost = 5.0
   val insuranceCoefficient = 0.005
   // стоимость страховки
   val insuranceCost = insuranceCoefficient * (cost?: defaultCost)
   val totalCost: Double = deliveryCost + insuranceCost

Задача 3

Контекст: Вы проводите метеорологические измерения. Одним из важных показателей является
 атмосферное давление, которое должно быть зафиксировано. Лаборант приносит вам набор показателей,
  но по пути может что-нибудь потерять. Задача - сообщить об ошибке в случае отсутствия показаний
  атмосферного давления.

  // example 3
     val pressure: String? = "34.6" // но может быть null
     val attentionMessage = "Attention, pressure is lost"
     val pressureForLab = pressure?: attentionMessage
  }